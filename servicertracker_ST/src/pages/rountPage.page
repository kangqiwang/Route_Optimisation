<apex:page controller="MapControllertest" showHeader="true" sidebar="false">	
    <html>
        <head>    
            <title>Route Optimisation</title>
            <script src="./../soap/ajax/43.0/connection.js" type="text/javascript"></script>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
            <script src="https://api.mqcdn.com/sdk/mapquest-js/v1.3.1/mapquest.js"></script>
            <link rel="stylesheet" href="https://api.mqcdn.com/sdk/mapquest-js/v1.3.1/mapquest.css"/>
                <style>
                #date_container {
            display: flex;
            justify-content: center;
            }
            
            .result{
                display: flex;
                height: 100%;
                flex-direction: column;
            }
            .header,.footer{
                flex:none;
            }
            .container{
                display: flex;
                flex: 1 0 auto;
                flex-direction: colum;
                padding: 1em;
            }
            .main{
                margin-top: 1em;
                order:1;
            }
            .right{order: 2;}
            .left{
                order: -1;
            }
            .left,.right{
                padding: 1em;
                border-radius: 3px;
                background: rgba(147, 128, 108, 0.1);
            }
            
            @media (min-width: 768px) {
                .container {
                    flex-direction: row;
                }
                .main {
                    flex: 1;
                    padding: 1em;
                    margin: 0;
                }
                .left, .right {
                    flex: 0 0 12em;
                }
            }
            
            </style>
            
            
            <script type="text/javascript">
                //distribute the Monday-Starday
                var resources = [];
            var territories = [];
            window.onload = function() {
                //generate the HTML and add name
                <apex:repeat value="{!objectResource}" var="resource" id="resources">
                    var pResource=document.createElement("label");
                var node=document.createTextNode('{!resource.name}');
                var element=document.getElementById("resource");
                pResource.appendChild(node);
                element.appendChild(pResource);
                var checkboxResource=document.createElement("input");
                checkboxResource.name="resource";
                checkboxResource.value='{!resource.Id}';
                checkboxResource.setAttribute('type', 'checkbox');
                element.appendChild(checkboxResource);
                
                
                var resource ={
                    name: '{!resource.name}',
                    id:'{!resource.Id}',
                };
                resources.push(resource);
                
                </apex:repeat>
            }
            
            $(document).ready(function(){
                var status = 0;
                $("#result").show();
                
                //js json Ajax
                $("#matrixForm").submit(function(event){
                    
                    //getting data from the Form.
                    var rawData=$("#matrixForm").serializeArray();
                    
                    //prevent send request
                    event.preventDefault();
                    var resource=[];
                    var accountLocation=[];
                    var accoutSame=[];
                    var optimizationday={};
                    //get the visitData
                    var visitData=requestToSforce(rawData);
                    console.log(visitData);
                    
                    //get the resourcedata
                    var resourceData=requestResource(rawData);
                    console.log(resourceData);
                    console.log(visitData.records);
                    // var generatejson=generateMapJson(visitData,accountLocation,accoutSame);
                    seperatevisit(visitData,resourceData);
                    generateDayList(rawData,optimizationday);                
                    /*
                    //get the different Json file
                    //var terResvisit=seperatevisit(resourceData,visitData,accountLocation);
                    console.log(rawData);
                    
                    getTravelTime(generatejson,resourceData,visitData,rawData,accountLocation,accoutSame);
                    console.log("show result please");
                    //generateTerritory(rawData);
                    //sameLocation(visitData,accountLocation);
                    //var mappingJson=JSON.stringify({locations,options:allToAll});
                    */
                });
            });
                        
            function generateDayList(rawdata,optimizationday){
                var days = Math.round(Math.abs((new Date(rawdata[1].value).getTime()-new Date(rawdata[0].value).getTime())/(24*60*60*1000)));
                for(var i=0;i<days;i++){
                    var r=$('<div>this is result</div>');
                    $("#dayresult").show().append(r);
                }
                
                $("dayresult").children("div").click(function(event){
                    alert("cool");
                })
            }
            
            // generate the Json file
            //input :specific date and resource, territory output: the location 
            
            //input: data from the mapquest response. output: the time and distance
            function getTravelTime(mappingJson,resourceData,visitData,rawData,accountLocation,accoutSame){
                
                var RouteMatrix=[];
                var promises=[];
                for(var i=0; i<mappingJson.length;i++){
                    
                    var request=$.ajax({
                        
                        type: 'POST',
                        dataType: 'jsonp',
                        contentType: 'json',
                        url: "http://www.mapquestapi.com/directions/v2/routematrix",
                        data: {key: decodeURI("99JBw7RAaWzJmd7nMADgsOdbJseEtVPZ"),
                               json: mappingJson[i]}
                    });
                    promises.push(request);
                    
                    //console.log(timelist);
                }
                console.log('about to wait....' + resourceData.length);            
                $.when.apply($, promises).done(function(jsonp){
                    optimisation(arguments,resourceData,visitData,rawData,accountLocation,accoutSame);
                });
                console.dir(promises);
                console.log('final');
            }
            
            //send your resource location with different location to Mapquest            
            function removeDuplicates(arr){
                let unique_array = []
                for(let i = 0;i < arr.length; i++){
                    if(unique_array.indexOf(arr[i]) == -1){
                        unique_array.push(arr[i])
                    }
                }
                return unique_array
            }
            
            
            //timeMatrix and resourceData and visitData is array for different territory
            
            function generateObject(visit){
                
                var output={};
                for(var i=0; i<visit.size;i++){
                    var location=visit.records[i].STKR__Account_lkp__r.Id;
                    
                }
            }
            
            function seperatevisit(visit,resource){
                //get the post code prefix object and accountId object
                var groups={};
                var resourcegroup={};
                var postcode={};
                
                for(var i=0;i<visit.size;i++){
                    var latitude=visit.records[i].STKR__Account_lkp__r.
                    var location=visit.records[i].STKR__Account_lkp__r.Id;
                    var postcodTem=visit.records[i].STKR__Site_Post_Code__c;
                    postcodTem=postcodTem.slice(0,4);
                    
                    if(!postcode[postcodTem]){
                        postcode[postcodTem]=[];
                    }
                    if(!groups[location]){
                        groups[location]=[];
                    }
                    groups[location].push(i);
                    postcode[postcodTem].push(location);
                }
                //delete the duplicate element
                for(var obj in postcode){
                    postcode[obj]=removeDuplicates(postcode[obj]);
                }
                //if in each postcode location greater than 25-resource.size
                for(var obj in postcode){
                    var size=postcode[obj].length;
                    var resourceSize=resource.size;
                    if(size+resourceSize<25){
                        //generate json send request
                        //generateMapJson(postcode[obj]);
                        
                    }else{
                        //blank
                    }
                }
                
                console.log(postcode);
                console.log(groups);
                var myarray=[];
                for(var postcode in groups){
                    myarray.push({location:postcode, index:groups[postcode]})
                }
                var temLocation=[];
                var a=Number(temLocation[temLocation.length-1]);
            }

            function valueForm (rawdata){
                var resource=[];
                for (i=0;i<rawdata.length;i++){
                    if (rawdata[i].name=="resource"){
                        resource.push("'"+rawdata[i].value+"'");
                    }
                }
                return resource;
            }
            
            function requestResource(rawdata){
                var resource=valueForm(rawdata);
                
                var query="select Id,Name,STKR__Lunch_Break_Minutes__c, STKR__Expiry_Date__c, STKR__EndOfDay__c, STKR__Working_Hours__c,STKR__Fixed_Location__longitude__s,STKR__Fixed_Location__latitude__s from STKR__Resource__c where Id in ("+resource+")";
                try{
                    sforce.connection.sessionId="{!$Api.Session_ID}";
                    var queryResult=sforce.connection.query(query);
                    
                }catch(error)
                {
                    console.log(error);
                }
                return queryResult;
            }
            
            //input: the raw data output: filter data using Query
            function requestToSforce(data){
                var resource=valueForm(data);
                // query to find the lantitude and longtitude
                //best way is use one request get multiple resources and territories.
                var query="SELECT Id,Name,STKR__Site_Post_Code__c,STKR__Service__r.STKR__Service_Interval__c,STKR__Due_Date__c,STKR__Days_Overdue__c,STKR__Account_lkp__r.Id,STKR__Service__r.Id,STKR__Fixed_Visit__c, STKR__Service__r.STKR__Last_Scheduled_Visit__c,STKR__Service__r.STKR__Frequency__c, STKR__Service__r.STKR__Contract_End_Date__c,STKR__Service__r.STKR__Fix_all_Visits__c, STKR__Service__r.STKR__Start_Date__c, STKR__Service__r.STKR__Time_Allocation__c, STKR__Service__r.STKR__Service_Owner__c, STKR__Account_lkp__r.STKR__Location__longitude__s, STKR__Account_lkp__r.STKR__Location__latitude__s from STKR__Visit__c where STKR__Service__r.STKR__Service_Owner__c in ("+resource+") and STKR__Planned_Date__c< "+data[1].value+"T00:00:00.000+0000 and STKR__Planned_Date__c> "+data[0].value+"T00:00:00.000+0000";
                try{
                    sforce.connection.sessionId="{!$Api.Session_ID}";
                    var queryResult=sforce.connection.query(query);
                }catch(error)
                {
                    console.log(error);
                }
                return queryResult;
            }
            
            function locationNum(mappingJson,data){
                var temLocation=[];
                var temsame=[];
                var temLocation=[];
                var lat=Number(data.records[0].STKR__Account_lkp__r.STKR__location__Latitude__s);
                var lng=Number(data.records[0].STKR__Account_lkp__r.STKR__location__Longitude__s);
                var latLng=lat+","+lng;
                mappingJson.locations.push(latLng);
                temLocation.push(0);
                console.log(temLocation[temLocation.length-1]);
                for (i=1; i<data.size; i++){
                    var a=Number(temLocation[temLocation.length-1]);
                    if(data.records[i].STKR__Account_lkp__r.Id !=data.records[a].STKR__Account_lkp__r.Id){
                        var lat=Number(data.records[i].STKR__Account_lkp__r.STKR__location__Latitude__s);
                        var lng=Number(data.records[i].STKR__Account_lkp__r.STKR__location__Longitude__s);
                        var latLng=lat+","+lng;
                        mappingJson.locations.push(latLng);
                        temLocation.push(i);
                    }else{
                        temsame.push(i);
                    }                    
                }
                accoutSame.push(temsame);
                accountLocation.push(temLocation);
                
                return accountLocation;
            }
            //generate Json for sending request to MapQuest
            function generateMapJson(data,resource){
                var mappingJsonList=[];
                var mappingJson={};
                var locations=[];
                var accountLocationtem=[];
                
                mappingJson.locations=locations;
                accountLocationtem=locationNum(mappingJson,data);
                console.log("the index of different location or Account:"+accountLocationtem);
                //consider about the multiple location
                mappingJson.options={};
                mappingJson.options={"allToAll" :true};
                mappingJsonList.push(JSON.stringify(mappingJson));
                console.log(mappingJsonList);
                
                return mappingJsonList;
            }
            
            //calculate distance based on latitude/longitude
            function getDistance(lat1,lon1,lat2,lon2) {
                var R = 6371; // Radius of the earth in km
                var dLat = deg2rad(lat2-lat1);  // deg2rad below
                var dLon = deg2rad(lon2-lon1); 
                var a = 
                    Math.sin(dLat/2) * Math.sin(dLat/2) +
                    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
                    Math.sin(dLon/2) * Math.sin(dLon/2)
                ; 
                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
                var d = R * c; // Distance in km
                return d;
            }
            
            function deg2rad(deg) {
                return deg * (Math.PI/180)
            }
            
            function middlePoint(lat1, lng1, lat2, lng2) {
                
                //-- Longitude difference
                var dLng = (lng2 - lng1);
                
                //-- Convert to radians
                lat1 = lat1;
                lat2 = lat2;
                lng1 = lng1;
                
                var bX = Math.cos(lat2) * Math.cos(dLng);
                var bY = Math.cos(lat2) * Math.sin(dLng);
                var lat3 = Math.atan2(Math.sin(lat1) + Math.sin(lat2), Math.sqrt((Math.cos(lat1) + bX) * (Math.cos(lat1) + bX) + bY * bY));
                var lng3 = lng1 + Math.atan2(bY, Math.cos(lat1) + bX);
                
                //-- Return result
                return [lng3, lat3];
            }

            
            </script>
            
        </head>
        <body>
            <apex:pageBlock title="Route Optimisation">
                
                <form id="matrixForm">
                    <div id="date_container">
                        
                        <div>
                            <label>From Date </label>
                            <input type="date" id="fromDate" name="formDate"/>    
                        </div>
                        <div style='width: 30%;'></div>
                        
                        <div style='float:left;'>
                            <label>To Date</label>
                            <input type="date" id="toDate" name="toDate"/>    
                        </div>
                    </div>
                    
                    
                    <div id="resource">
                        
                    </div>
                    
                    
                    <div id="territory">
                        
                    </div>
                    <div>
                        <input type="submit" onclick="submit;" value="Route Optimisation"/>    
                    </div>
                    
                    
                </form>
                <hr />
                <div class="body" id="result">
                    <div id="territoryButton" class="header">
                    </div>
                    
                    <div class="container">
                        
                        <div id="dayresult" class="left">
                            <p></p></div>    
                        <div class="right">
                            <p></p></div>
                        <div class="main">
                            <p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.</p>  
                            
                            <div id="map"></div>
                        </div>
                    </div>
                    
                    <div class="footer"></div>
                </div>
            </apex:pageBlock>
        </body>
    </html>
</apex:page>